generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid()) @map("_id")
  clerkId   String   @unique
  email     String   @unique
  username  String   @unique
  firstName String
  lastName  String
  photo     String
  events    Event[]  @relation("UserToEvent")
  orders    Order[]  @relation("UserToOrder")
}

model Event {
  id            String    @id @default(uuid()) @map("_id")
  title         String
  description   String?
  location      String?
  createdAt     DateTime  @default(now())
  imageUrl      String
  startDateTime DateTime  @default(now())
  endDateTime   DateTime  @default(now())
  price         String?
  isFree        Boolean   @default(false)
  url           String?
  categoryId    String?
  organizerId   String?
  category      Category? @relation(fields: [categoryId], references: [id], name: "CategoryToEvent")
  organizer     User?     @relation(fields: [organizerId], references: [id], name: "UserToEvent", onDelete: Cascade)
  orders        Order[]   @relation("EventToOrder")
  
  @@index([categoryId])
  @@index([organizerId])
}

model Order {
  id           String   @id @default(uuid()) @map("_id")
  createdAt    DateTime @default(now())
  stripeId     String   @unique
  totalAmount  String?
  eventId      String?
  buyerId      String?
  event        Event?   @relation(fields: [eventId], references: [id], name: "EventToOrder", onDelete: Cascade)
  buyer        User?    @relation(fields: [buyerId], references: [id], name: "UserToOrder", onDelete: Cascade)
  
  @@index([eventId])
  @@index([buyerId])
}

model Category {
  id     String   @id @default(uuid()) @map("_id")
  name   String   @unique
  events Event[]  @relation("CategoryToEvent")
}
